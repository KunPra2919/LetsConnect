// <auto-generated />
using System;
using LetsConnect.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LetsConnect.Data.Migrations
{
    [DbContext(typeof(LetsConnectDBContext))]
    [Migration("20180729104823_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LetsConnect.Entities.Models.UserTechnologies", b =>
                {
                    b.Property<int>("UserID");

                    b.Property<int>("TechnologyID");

                    b.HasKey("UserID", "TechnologyID");

                    b.HasIndex("TechnologyID");

                    b.ToTable("UserTechnologies");
                });

            modelBuilder.Entity("LetsConnect.Models.Experience", b =>
                {
                    b.Property<int>("ExperienceID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExperienceRange");

                    b.HasKey("ExperienceID");

                    b.ToTable("Experience");
                });

            modelBuilder.Entity("LetsConnect.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName");

                    b.HasKey("RoleID");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("LetsConnect.Models.Technologies", b =>
                {
                    b.Property<int>("TechnologyID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TechnologyName");

                    b.HasKey("TechnologyID");

                    b.ToTable("Technologies");
                });

            modelBuilder.Entity("LetsConnect.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("CreatedOn");

                    b.Property<string>("Email");

                    b.Property<int>("ExperienceID");

                    b.Property<string>("FirstName");

                    b.Property<string>("Gender");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsActiveForJob");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastName");

                    b.Property<DateTime>("ModifiedOn");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNo");

                    b.Property<int>("RoleID");

                    b.HasKey("UserID");

                    b.HasIndex("ExperienceID");

                    b.HasIndex("RoleID");

                    b.ToTable("User");
                });

            modelBuilder.Entity("LetsConnect.Entities.Models.UserTechnologies", b =>
                {
                    b.HasOne("LetsConnect.Models.Technologies", "Technologies")
                        .WithMany("UserTechnology")
                        .HasForeignKey("TechnologyID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LetsConnect.Models.User", "User")
                        .WithMany("UserTechnology")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LetsConnect.Models.User", b =>
                {
                    b.HasOne("LetsConnect.Models.Experience", "Experience")
                        .WithMany("User")
                        .HasForeignKey("ExperienceID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LetsConnect.Models.Role", "Roles")
                        .WithMany("User")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
